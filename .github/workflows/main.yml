name: CI/CD Pipeline

on:
  push:
    branches: ["main"]  # run when code is pushed to main
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up JDK (optional for tests outside Docker)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3. Run tests (inside GitHub runner, not Docker)
#      - name: Run Maven tests
#        run: mvn test

      - name: Run Checkstyle
        run: mvn checkstyle:check

      # 4. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Build Docker image (multi-stage Dockerfile)
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/fruits-service:latest .

      # 6. Push Docker image
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/fruits-service:latest

      - name: Debug secrets
        run: |
          echo "ResourceGroup length: ${#RESOURCE_GROUP}"
          echo "ClusterName length: ${#CLUSTER_NAME}"
        env:
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group "${{ secrets.RESOURCE_GROUP }}" --name "${{ secrets.CLUSTER_NAME }}" --overwrite-existing

      - name: Deploy to AKS 1
        run: kubectl apply -f mysql-all.yaml

      - name: Deploy to AKS 2
        run: kubectl apply -f fruit-service.yaml

